<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>고양시 동 선택</title>
  <style>
    .region {
      fill: #ffffff;
      stroke: #004c80;
      stroke-width: 2;
      cursor: pointer;
      fill-opacity: 0.3;
    }

    .region:hover {
      fill: #e6e6e6;
      fill-opacity: 0.5;
    }

    .region.active {
      fill: #808080;
      fill-opacity: 0.8;
    }

    .ilsandonggu {
      fill: #f08080;
    }

    .deogyanggu {
      fill: #90ee90;
    }

    .ilsanseogu {
      fill: #87ceeb;
    }

    .ilsandonggu:hover {
      fill: #e57373;
    }

    .deogyanggu:hover {
      fill: #77dd77;
    }

    .ilsanseogu:hover {
      fill: #6cb4e4;
    }

    .ilsandonggu.active {
      fill: #e24e4e;
    }

    .deogyanggu.active {
      fill: #66cc66;
    }

    .ilsanseogu.active {
      fill: #5ca9e1;
    }

    .dong-name {
      cursor: pointer;
      font-size: 12px;
      fill: black;
      text-anchor: middle;
      user-select: none;
    }

    .dong-name:hover {
      fill: #ff6347;
    }

    foreignObject {
      pointer-events: all;
    }

  </style>
</head>

<body>
  <!-- 구 이름 버튼 추가 -->
  <button id="ilsanseogu-btn">일산서구</button>
  <button id="ilsandonggu-btn">일산동구</button>
  <button id="deogyanggu-btn">덕양구</button>

  <svg id="map-container" width="1000" height="700"></svg>

  <div>선택된 구 : <span id="selected-gu">없음</span></div>
  <div>선택된 동 : <span id="selected-dong">없음</span></div>

  <script src="https://d3js.org/d3.v7.min.js"></script>
  <script>
    const svg = d3.select("#map-container");
    const width = +svg.attr("width");
    const height = +svg.attr("height");

    d3.json('/static/geojson/Go-yang-si_merged.json').then(data => {
      const projection = d3.geoMercator().fitSize([width, height], data);
      const path = d3.geoPath().projection(projection);

      svg.selectAll("path")
        .data(data.features)
        .enter()
        .append("path")
        .attr("d", path)
        .attr("class", function(d) {
          const guName = d.properties.sggnm;

          if (guName.includes('일산동구')) {
            return 'region ilsandonggu';
          } else if (guName.includes('덕양구')) {
            return 'region deogyanggu';
          } else if (guName.includes('일산서구')) {
            return 'region ilsanseogu';
          } else {
            return 'region';
          }
        })
        .on("click", function(event, d) {
          const guName = d.properties.sggnm;
          const dongName = d.properties.adm_nm;

          let gu = guName.slice(3);
          let dong = dongName.slice(-3);

          document.getElementById('selected-gu').textContent = gu;
          document.getElementById('selected-dong').textContent = dong;

          d3.selectAll("path").classed("active", false);
          d3.select(this).classed("active", true);
        });

      svg.selectAll("foreignObject")
        .data(data.features)
        .enter()
        .append("foreignObject")
        .attr("x", function(d) {
          const centroid = path.centroid(d);
          return centroid[0] - 20;
        })
        .attr("y", function(d) {
          const centroid = path.centroid(d);
          return centroid[1] - 10;
        })
        .attr("width", function(d) {
          const dongName = d.properties.adm_nm.slice(-3);
          return dongName.length * 10 + 10;
        })
        .attr("height", 20)
        .append("xhtml:div")
        .html(function(d) {
          return `<span class="dong-name">${d.properties.adm_nm.slice(-3)}</span>`;
        })
        .on("click", function(event, d) {
          const guName = d.properties.sggnm;
          const dongName = d.properties.adm_nm;

          let gu = guName.slice(3);
          let dong = dongName.slice(-3);

          document.getElementById('selected-gu').textContent = gu;
          document.getElementById('selected-dong').textContent = dong;

          d3.selectAll("path").classed("active", false);
          d3.select(this).classed("active", true);

          const dongPath = svg.selectAll("path").filter(function(pathData) {
            return pathData.properties.adm_nm === dongName;
          });

          dongPath.classed("active", true);
        })
        .on("mouseover", function(event, d) {
          const dongName = d.properties.adm_nm.slice(-3);

          svg.selectAll("path")
            .filter(function(pathData) {
              return pathData.properties.adm_nm === dongName;
            })
            .classed("hover", true);
        })
        .on("mouseout", function(event, d) {
          svg.selectAll("path")
            .filter(function(pathData) {
              return pathData.properties.adm_nm === d.properties.adm_nm;
            })
            .classed("hover", false);
        });

      document.getElementById("ilsandonggu-btn").addEventListener("click", () => {
        d3.selectAll(".ilsandonggu").classed("active", true);
        d3.selectAll(".deogyanggu").classed("active", false);
        d3.selectAll(".ilsanseogu").classed("active", false);
        document.getElementById('selected-gu').textContent = "일산동구";
        document.getElementById('selected-dong').textContent = "없음";
      });

      document.getElementById("deogyanggu-btn").addEventListener("click", () => {
        d3.selectAll(".deogyanggu").classed("active", true);
        d3.selectAll(".ilsandonggu").classed("active", false);
        d3.selectAll(".ilsanseogu").classed("active", false);
        document.getElementById('selected-gu').textContent = "덕양구";
        document.getElementById('selected-dong').textContent = "없음";
      });

      document.getElementById("ilsanseogu-btn").addEventListener("click", () => {
        d3.selectAll(".ilsanseogu").classed("active", true);
        d3.selectAll(".ilsandonggu").classed("active", false);
        d3.selectAll(".deogyanggu").classed("active", false);
        document.getElementById('selected-gu').textContent = "일산서구";
        document.getElementById('selected-dong').textContent = "없음";
      });

    }).catch(error => {
      console.error("GeoJSON 불러오기 오류:", error);
    });
  </script>
</body>
</html>
