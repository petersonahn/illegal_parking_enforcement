@csrf_exempt
def illegal_parking_record(request):
    if request.method == "POST":
        try:
            data = json.loads(request.body)
            gu = data.get('gu', '알 수 없음')
            dong = data.get('dong', '알 수 없음')
            district = f"{gu} {dong}"

            record = IllegalParkingRecord.objects.create(
                district=district
            )
            return JsonResponse({'id': record.id}, status=201)
        except Exception as e:
            return JsonResponse({'error': str(e)}, status=400)
    return JsonResponse({'error': 'POST 요청만 허용'}, status=405)



def illegal_parking_stats(request):
    period = request.GET.get('period', 'week')
    gu = request.GET.get('gu', None)  # 여기 추가

    now = timezone.now()
    if period == 'week':
        start = now - timezone.timedelta(days=7)
    elif period == 'month':
        start = now - timezone.timedelta(days=30)
    elif period == 'year':
        start = now - timezone.timedelta(days=365)
    else:
        start = None  # 전체

    qs = IllegalParkingRecord.objects.all()
    if start:
        qs = qs.filter(timestamp__gte=start)

    if gu and gu != 'all':            # 선택한 구가 있을 때만 필터
        qs = qs.filter(district__startswith=gu)

    # 날짜별, 동별 집계
    stats = qs.values('district').annotate(count=Count('id')).order_by('-count')

    return JsonResponse(list(stats), safe=False)



def district_list(request):
    districts = (IllegalParkingRecord.objects
                   .exclude(district__isnull=True)
                   .exclude(district='')
                   .values_list('district', flat=True)
                   .distinct()
                   .order_by('district'))
    return JsonResponse(list(districts), safe=False)
